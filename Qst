Вопрос №1

Да, читал, много различных. Из последних: читал скрипты для получения картинки с камеры и определения расстояния до объекта с помощью стереозрения, OpenCV и Python.

Впечатления: почему все так любят Python…

Вопрос №2

Есть языки разных уровней, от низкого до высокого.

Низкие: программирование на регистрах, ассемблер;

Выше: C/C++;

Еще выше (ООП): Java, C#, Python, JavaScript.

Вопрос №3

Компилятор - программа, преобразующая человекопонятный программный код (текстовый), в машинный код (на котором компьютер "думает"). 
— это просто числа (коды операторов, и значения операндов). также, его называют бинарным кодом.

Интерпретируемый язык (например, Python) не компилируется. Он транслируются при запуске, с помощью интерпретатора. Например, программы Java запускаются через нечто, называемое JVM (виртуальная машина Java). Поскольку эти языки не нуждаются в предварительной компиляции, программы, написанные в них намного легче сделать и протестировать. В результате, однако, само программное обеспечение может быть значительно медленнее.

Вопрос №4

Фреймворк — это набор и инструментов, который призван облегчить и ускорить создание сайтов и приложений благодаря встроенным в него шаблонам. Они позволяют вести разработку в соответствии со своими правилами, за что и ценятся опытными web-мастерами.

Примеры: ASP.NET, AngularJS, ReactJS.

Вопрос №5

HTTP (от англ. HyperText Transfer Protocol — протокол передачи гипертекста) — это прикладной протокол передачи данных в сети, на текущий момент используется для получения информации с веб-сайтов. Протокол HTTP основан на использовании технологии «клиент-сервер»: клиент, отправляющий запрос, является инициатором соединения; сервер, получающий запрос, выполняет его и отправляет клиенту результат.

HTTPS (от англ. HyperText Transfer Protocol Secure — безопасный протокол передачи гипертекста) — это расширение протокола HTTP, поддерживающее шифрование посредством криптографических протоколов SSL и TLS.

Поэтому чаще появляются https, так как они безопаснее.

Вопрос №7

SQL - специальный язык, используемый для работы с базами данных. С помощью SQL можно задавать структуру базы, организовывать выборку данных из неё по каким-то определённым критериям, удалять данные.

MySQL — это проверенная технология. MySQL используется крупными компаниями более 15 лет. Так как он использует стандарт SQL, есть возможность достаточно простой миграции на другие SQL-базы данных. Есть возможность транзакций. Поддерживаются сложные запросы, включая аналитику.

С точки зрения MongoDB, здесь преимущество то, что у нас гибкий JSON-формат документов. Для некоторых задач и каким-то разработчикам это удобнее, чем мучиться с добавлением колонок в SQL-базах данных. Не нужно учить SQL — для некоторых это сложно. Простые запросы реже создают проблемы. Если посмотреть на проблемы производительности, в основном они возникают, когда люди пишут сложные запросы с JOIN в кучу таблиц и GROUP BY. Если такой функциональности в системе нет, то создать сложный запрос получается сложнее.

В MongoDB встроена достаточно простая масштабируемость с использованием технологии шардинга. Сложные запросы если возникают, мы их обычно решаем на стороне приложения. То есть, если нам нужно сделать что-то вроде JOIN, мы можем сходить выбрать данные, потом сходить выбрать данные по ссылкам и затем их обработать на стороне приложения. Для людей, которые знают язык SQL, это выглядит как-то убого и ненатурально. Но на самом деле для многих разработка application-серверов такое куда проще, чем разбираться с JOIN.

Вопрос №8

https://github.com/GhostLate/InnpputSim

Есть и другие проекты, лучше и сложнее. Но их скинуть не могу.

Например, писал автоматизацию виртуальных машин.

На хосте установлена программа, которая автоматически запускает ВМ, в них выполняется какой-то код, данные эти все собираются и отправляются на главную машину, где пользователь может видеть состояние выполненной работы, еще он может сам запустить машину или поставить на паузу выполнение или выключить.

Вопрос №9

В файле с названием SQL
